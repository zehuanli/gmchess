commit f30e6891340cfe05555a063da7c1c4f4941026af
Author: Boyuan Yang <073plan@gmail.com>
Date:   Wed Feb 7 01:05:26 2018 +0800

    src: Engine: some reviews

diff --git a/src/Engine.cc b/src/Engine.cc
index dd0187e..0ebc18d 100644
--- a/src/Engine.cc
+++ b/src/Engine.cc
@@ -444,33 +444,41 @@ int Engine::get_knight_leg(int f_src, int f_dst)
 }
 
 /** 
+ * @brief Check if the player could mitigate checkmate status
  * 目前所有棋子的着法，检测走后是否能解除将军状态，如果都不行，则死棋
  * 死棋检测耗资源巨大，最好设定一个将军标识，在被将军状态下再检测
  * 这是在将军前提下检测死棋，没子走的情况暂不检测,公头被困死应该只剩下一个
  * 公的状态下，这种状态另外搞吧，应该很简单。
+ *
+ * 如果被将死，返回 false。
  */
 bool Engine::mate()
 {
-	/** 没被将军，那就没事，有棋,bug是将/帅被困死 */
-	m_checked = checked_by();
-	if(!m_checked)
-		return false;
-	/** 
-	 * 轮到黑方走，则生成黑方所有的着法，并一一检测，如果都不能通过，
-	 * 则死棋,如果遇到一个能通过的，则马上返回false吧
-	 */
-	DLOG("mate function\n");
-		int src;
-		int i;
-		int dst;
-		for (i = KING_FROM; i <= PAWN_TO; i++) {
-			if(src = chessmans[side_tag(black_player)+i]){
-				int chess_t =get_chessman_type(get_piece(src));
-				switch(chess_t){
-				case RED_KING:
-				case BLACK_KING:
-					for(int k=0;k<4;k++){
-						dst=src+KingMoveTab[k];
+    /** 没被将军，那就没事，有棋,bug是将/帅被困死 */
+    /** FIXME: 实现将帅被困死的情况，目前存在 bug */
+    m_checked = checked_by();
+    if(!m_checked) {
+        return false;
+    }
+
+    /**
+     * 轮到黑方走，则生成黑方所有的着法，并一一检测，如果都不能通过，
+     * 则死棋,如果遇到一个能通过的，则马上返回false吧
+     */
+    DLOG("Checkmate evaluation started\n");
+    int src;
+    int i;
+    int dst;
+
+    for (i = KING_FROM; i <= PAWN_TO; i++) {
+        src = chessmans[side_tag(black_player) + i];
+        if (src) {
+            int chess_t =  get_chessman_type(get_piece(src));
+            switch (chess_t) {
+                case RED_KING:
+                case BLACK_KING:
+                    for (int k = 0; k < 4; k++) {
+                        dst = src + KingMoveTab[k];
 						if(in_fort(dst)){
 							int mv = get_move(src,dst);
 							if(make_move(mv)){
diff --git a/src/Engine.h b/src/Engine.h
index fe44b5b..2029e00 100644
--- a/src/Engine.h
+++ b/src/Engine.h
@@ -105,11 +105,12 @@ class Engine {
 		inline int RANK_X(int sq) {
 			  return sq & 15;
 		}
-		
-		inline int side_tag(int sd) {
-			  int pc = 16 + (sd << 4);
-			    return pc;
-		}
+
+        inline int side_tag(int sd) {
+             int pc = 16 + (sd << 4); // 16 + (sd * 16);
+             return pc;
+        }
+
 		/** 棋子类型转成FEN串字符 */
 		/** chess type convert to FEN character */
 		inline char piece_to_fen(int pt) {
