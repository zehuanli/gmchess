commit d136822bd7988780d6437efd0fba20ec5a6e82a3
Author: Boyuan Yang <073plan@gmail.com>
Date:   Wed Feb 7 12:22:08 2018 +0800

    src: Explicitly init some chararrays as 0

diff --git a/src/Board.cc b/src/Board.cc
index b07a950..4317d17 100644
--- a/src/Board.cc
+++ b/src/Board.cc
@@ -175,7 +175,7 @@ void Board::set_themes(const std::string& themes_)
 }
 Glib::RefPtr<Gdk::Pixbuf> Board::get_pic(const std::string& name_)
 {
-	char path[1024];
+	char path[1024] = {0};
 	sprintf(path, DATA_DIR"/themes/%s/%s",theme.c_str(),name_.c_str());
 	return Gdk::Pixbuf::create_from_file(path);
 
@@ -183,7 +183,7 @@ Glib::RefPtr<Gdk::Pixbuf> Board::get_pic(const std::string& name_)
 
 Glib::RefPtr<Gdk::Pixbuf> Board::get_spic(const std::string& name_)
 {
-	char path[1024];
+	char path[1024] = {0};
 	sprintf(path, DATA_DIR"/themes/%s-small/%s",theme.c_str(),name_.c_str());
 	return Gdk::Pixbuf::create_from_file(path);
 
@@ -1133,7 +1133,7 @@ void Board::new_game(BOARD_STATUS _status)
 bool Board::robot_log(const Glib::IOCondition& condition)
 {
 	/*for testing,delete me*/
-	char buf[1024];
+	char buf[1024] = {0};
 	int buf_len = 1024;
 	char* p = buf;
 	for (; buf_len > 0; ) {
@@ -1320,7 +1320,7 @@ bool Board::on_network_io(const Glib::IOCondition& )
 
 	int fd_cli = -1;
        EC_THROW(-1 == (fd_cli = accept(fd_recv_skt, NULL, 0)));
-       char buf[1024];
+       char buf[1024] = {0};
        size_t len = read(fd_cli, &buf[0], 1023);
        buf[len]=0;
        if (len > 0) {
diff --git a/src/engine/base2.h b/src/engine/base2.h
index e6b0d4f..3909508 100644
--- a/src/engine/base2.h
+++ b/src/engine/base2.h
@@ -46,6 +46,7 @@ inline bool AbsolutePath(const char *sz) {
   return sz[0] == '/' || (sz[0] == '~' && sz[1] == '/');
 }
 
+// XXX: not portable
 inline void GetSelfExe(char *szDst) {
   readlink("/proc/self/exe", szDst, PATH_MAX_CHAR);
 }
